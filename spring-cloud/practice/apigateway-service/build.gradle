plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'application' // 추가
}

application {
	mainClass = 'com.example.apigateway_service.ApigatewayServiceApplication' // 메인 클래스 경로를 실제로 설정해야 합니다.
}

run {
	jvmArgs = ['-Xms128m', '-Xmx256m']
}

group = 'com.example'
version = '1.0'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.0")
}

dependencies {
//	implementation 'org.springframework.cloud:spring-cloud-starter-gateway-mvc'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus'

	// https://mvnrepository.com/artifact/com.auth0/java-jwt
	implementation 'com.auth0:java-jwt:3.10.3'
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
//	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
//	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3' // 추가
//	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3' // Jackson 사용 시
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
